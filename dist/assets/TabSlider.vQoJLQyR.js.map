{"version":3,"file":"TabSlider.vQoJLQyR.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/components/TabSlider.jsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useEffect, useState, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Heading from \"./Heading\";\n\nconst tabs = [\n  {\n    id: \"Data Security\",\n    title: \"Data Security\",\n    image:\n      \"https://res.cloudinary.com/djvxynk2f/image/upload/v1748310192/data-security-min_gacc6u.jpg\",\n    description:\n      \"As an ISO/IEC 27001:2022-certified organization, we safeguard your critical information with rigorous measures, ensuring confidentiality, integrity, and availability. Our commitment to globally recognized standards and continuous monitoring protects your sensitive data. Trust us with your data and rely on our expertise. We prioritize security and confidentiality.\",\n  },\n  {\n    id: \"Tools & Technologies\",\n    title: \"Tools & Technologies\",\n    image:\n      \"https://res.cloudinary.com/djvxynk2f/image/upload/v1748310193/tools-technology-min_oo3gjl.jpg\",\n    description:\n      \"We leverage cutting-edge tools and technologies to deliver high-quality services, including advanced data analytics and visualization tools, cloud-based platforms for scalable and secure operations, robust cybersecurity measures to protect sensitive data, and industry-leading software solutions. By staying up-to-date with the latest technologies, we drive innovation, efficiency, and excellence in our services, ensuring our clients receive the best possible outcomes.\",\n  },\n  {\n    id: \"Expert Team\",\n    title: \"Expert Team\",\n    image:\n      \"https://res.cloudinary.com/djvxynk2f/image/upload/v1748310194/expert_team-min_u2tnaj.jpg\",\n    description:\n      \"Our team of experts brings extensive experience and knowledge to deliver high-quality services. Our professionals are skilled, dedicated, and passionate about helping clients achieve their goals. With a deep understanding of industry trends and best practices, our team provides innovative solutions and exceptional support. We foster a collaborative environment that encourages growth, learning, and excellence. Our team's expertise and commitment ensure our clients receive the best possible outcomes. Trust our experts to drive your success.\",\n  },\n  {\n    id: \"World-class Infrastructure\",\n    title: \"World-class Infrastructure\",\n    image:\n      \"https://res.cloudinary.com/djvxynk2f/image/upload/v1748310192/world_class-min_qz7pv1.jpg\",\n    description:\n      \"We invest in world-class infrastructure to support our clients' needs. Our state-of-the-art facilities and cutting-edge technology enable seamless operations, efficient communication, and secure data management. With robust systems and reliable networks, we ensure high-performance capabilities and minimal downtime. Our infrastructure is designed to support scalability, flexibility, and innovation, allowing us to deliver exceptional services to our clients. By leveraging the latest advancements, we drive efficiency and excellence in everything we do.\",\n  },\n];\n\nconst TabSlider = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const containerRef = useRef(null);\n\n  // Intersection Observer to detect if component is in viewport\n  useEffect(() => {\n    const observer = new window.IntersectionObserver(\n      ([entry]) => setIsVisible(entry.isIntersecting),\n      { threshold: 0.2 }\n    );\n    if (containerRef.current) observer.observe(containerRef.current);\n    return () => {\n      if (containerRef.current) observer.unobserve(containerRef.current);\n    };\n  }, []);\n\n  // Auto switch tab every 5 seconds, only if visible\n  useEffect(() => {\n    if (!isVisible) return;\n    const interval = setInterval(() => {\n      setActiveIndex((prevIndex) => (prevIndex + 1) % tabs.length);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [isVisible]);\n\n  const selected = tabs[activeIndex];\n\n  return (\n    <div ref={containerRef} className=\"max-w-6xl mx-auto px-4 py-16\">\n      <Heading text1={\"Why\"} text2={\"Choose Us ?\"} />\n\n      {/* Tabs */}\n      <div className=\"flex flex-wrap justify-center gap-3 mb-10 bg-slate-100 p-2 rounded-full relative shadow-inner\">\n        {tabs.map((tab, index) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveIndex(index)}\n            className={`relative z-10 px-5 py-2 text-sm font-medium rounded-full transition-all duration-300 ${\n              activeIndex === index\n                ? \"text-white\"\n                : \"text-gray-700 hover:text-blue-600\"\n            }`}>\n            {tab.title}\n            {activeIndex === index && (\n              <motion.div\n                layoutId=\"highlight\"\n                className=\"absolute inset-0 bg-blue-500 rounded-full z-[-1]\"\n                transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n              />\n            )}\n          </button>\n        ))}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"relative min-h-[300px]\">\n        {isVisible && (\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={selected.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.4 }}\n              className=\"grid grid-cols-1 md:grid-cols-2 gap-8 items-center bg-white/90 backdrop-blur-sm p-6 md:p-10 rounded-2xl shadow-xl border border-slate-200\">\n              <motion.img\n                src={selected.image}\n                alt={selected.title}\n                className=\"w-full h-64 md:h-80 object-cover rounded-xl shadow-md\"\n                whileHover={{ scale: 1.03 }}\n                transition={{ type: \"spring\", stiffness: 200 }}\n              />\n              <div>\n                <h2 className=\"text-2xl md:text-3xl font-bold text-blue-600 mb-3\">\n                  {selected.title}\n                </h2>\n                <p className=\"text-gray-700 text-base leading-relaxed\">\n                  {selected.description}\n                </p>\n              </div>\n            </motion.div>\n          </AnimatePresence>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TabSlider;\n"],"names":["PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","React.useEffect","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","has","isEveryExitComplete","isExitComplete","tabs","title","image","description","TabSlider","activeIndex","setActiveIndex","isVisible","setIsVisible","containerRef","useEffect","observer","window","IntersectionObserver","entry","isIntersecting","threshold","observe","unobserve","interval","setInterval","prevIndex","clearInterval","selected","jsxs","className","Heading","text1","text2","tab","index","onClick","motion","div","layoutId","transition","type","stiffness","damping","opacity","y","animate","exit","duration","img","src","alt","whileHover","scale"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}