{"version":3,"file":"proxy.Cty2pC7c.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","undefined","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","frameloop","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","getValueAsType","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","safeToRemove","useCallback","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","visualState","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","scaleCorrectors","isForcedMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","prevProps","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","resolveFinalValueInKeyframes","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251]}